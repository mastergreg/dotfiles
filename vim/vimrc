syn on
set relativenumber
set nocp
"
"set expandtab
"set shiftwidth=4
"set tabstop=4
"

"Linux Kernel
set tabstop=4
set softtabstop=4
set shiftwidth=4
set expandtab 
set diffopt+=iwhite
set smarttab                    "Indent instead of tab at start of line
set shiftround                  "Round spaces to nearest shiftwidth multiple
set nojoinspaces                "Don't convert spaces to tabs


"
set complete=.,w,b,u,t,i,d
"set foldmethod=syntax
"set foldlevel=1
"set foldnestmax=2

"set foldmethod=indent
set foldmethod=marker
set foldmarker={{{,}}}
set nowrap
set backspace=2
set showmatch
set ttyfast
set autowrite
set autoindent
set mouse=a
set mousehide
set encoding=utf8
set splitbelow

let mapleader=","
inoremap <leader>l <C-^>

noremap ; :
noremap : ;
noremap <space> za

noremap <F12> :NERDTreeToggle<CR>
let NERDTreeIgnore=['.*\.o$']
let NERDTreeIgnore+=['.*\~$']
let NERDTreeIgnore+=['.*\.out$']
let NERDTreeIgnore+=['.*\.so$', '.*\.a$']


noremap <F11> :TlistToggle<CR>

noremap <F5> :make<CR>

nnoremap Y y$


" statusline -----------------------------------------------------------

set wildmenu
set incsearch
set ignorecase
set smartcase
set scrolloff=10
set sidescrolloff=10
set shortmess=aOstT
set backup
set nohidden
set backupdir=~/.vim/backup
set directory=~/.vim/tmp
set cmdheight=1         " command line height
set laststatus=2        " condition to show status line, 2=always.
set ruler               " show cursor position in status line
set showmode            " show mode in status line
set showcmd             " show partial commands in status line
"set statusline=%r%h%w\ %([%{&ff}]%)%(:%y%)%(:[%{&fenc}]%)\ BUFF[%1.20n]%=%1.7l,%1.7c\ \ [%p%%]
" shows: filename, position, eof, syntax, encoding, format 
set statusline=%-3.3n\ %f\ %r%#Error#%m%#Statusline#\ (%l/%L,\ %c)\ %P%=%h%w\ %y\ [%1.20n]:[%{&encoding}:%{&fileformat}]\ 
set cursorline

set colorcolumn=80

set listchars=tab:,.,trail:.,extends:#,nbsp:. " Highlight problematic whitespace
set pastetoggle=<F12>


if &term=~"linux"
    colo default
else
    set t_Co=256
    "colo wombat256mod
	"colo lucius
    "colo delek
    "colo slate
    "colo ir_black
    colo vimbrant
    "colo ir_black
    "colo molokai 
    "colo dante
    "colo zenburn 
endif


let Tlist_Use_Right_Window=1


call pathogen#infect()

filetype off                   " required!

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

   " let Vundle manage Vundle
   "  " required! 
Bundle 'gmarik/vundle'
Bundle 'Lokaltog/vim-powerline'
Bundle 'AutoComplPop'
Bundle 'rosenfeld/conque-term'

filetype plugin indent on     " required!


if has("autocmd")

"{{{"Templates for c and c++ files
autocmd BufNewFile *.c,*.cpp,*.h so /home/master/.vim/c_template
autocmd BufNewFile *.c,*.cpp,*.h exe "1," . 6 . "g/File Name :.*/s//File Name : " .expand("%")
autocmd BufNewFile *.c,*.cpp,*.h exe "1," . 6 . "g/Creation Date :.*/s//Creation Date : " .strftime("%d-%m-%Y")
autocmd Bufwritepre,filewritepre *.c,*.cpp,*.h execute "normal ma"
autocmd Bufwritepre,filewritepre *.c,*.cpp,*.h exe "1," . 6 . "g/Last Modified :.*/s/Last Modified :.*/Last Modified : " .strftime("%c")
autocmd bufwritepost,filewritepost *.c,*.cpp,*.h execute "normal `a"
autocmd BufNewFile,BufRead *.c,*.h set foldmethod=syntax smartindent cinwords cinwords=if,else,for,do,while,switch
autocmd BufNewFile,BufRead *.cpp set foldmethod=syntax smartindent cinwords cinwords=if,else,for,do,while,switch,class
"}}}

"{{{Templates and indentation for SML files
autocmd BufNewFile *.sml so /home/master/.vim/ml_template
autocmd BufNewFile *.sml exe "1," . 6 . "g/File Name :.*/s//File Name : " .expand("%")
autocmd BufNewFile *.sml exe "1," . 6 . "g/Creation Date :.*/s//Creation Date : " .strftime("%d-%m-%Y")
autocmd Bufwritepre,filewritepre *.sml execute "normal ma"
autocmd Bufwritepre,filewritepre *.sml exe "1," . 6 . "g/Last Modified :.*/s/Last Modified :.*/Last Modified : " .strftime("%c")
autocmd bufwritepost,filewritepost  *.sml execute "normal `a"
autocmd BufNewFile,BufRead *sml set smartindent cinwords cinwords=fun,if,then,else,let,in,sig,struct,adstype,datatype,functor,structure,signature,case syntax=sml
"}}}

"{{{Templates and indentation for Haskell files
autocmd BufRead *.hs set foldmethod=indent smartindent sw=2 ts=2 sts=2 expandtab
autocmd BufNewFile *.hs so /home/master/.vim/haskell_template
autocmd BufNewFile *.hs exe "1," . 6 . "g/File Name :.*/s//File Name : " .expand("%")
autocmd BufNewFile *.hs exe "1," . 6 . "g/Creation Date :.*/s//Creation Date : " .strftime("%d-%m-%Y")
autocmd Bufwritepre,filewritepre *.hs execute "normal ma"
autocmd Bufwritepre,filewritepre *.hs exe "1," . 6 . "g/Last Modified :.*/s/Last Modified :.*/Last Modified : " .strftime("%c")
autocmd bufwritepost,filewritepost  *.hs execute "normal `a"
autocmd BufNewFile,BufRead *.hs set smartindent cinwords cinwords=fun,if,then,else,let,in,sig,struct,adstype,datatype,functor,structure,signature,case
"}}}

"{{{Templates indentation and syntax for prolog files
autocmd BufNewFile *.yap so /home/master/.vim/prolog_template
autocmd BufNewFile *.yap set smartindent syntax=prolog
autocmd BufNewFile *.yap exe "1," . 6 . "g/File Name :.*/s//File Name : " .expand("%")
autocmd BufNewFile *.yap exe "1," . 6 . "g/Creation Date :.*/s//Creation Date : " .strftime("%d-%m-%Y")
autocmd Bufwritepre,filewritepre *.yap execute "normal ma"
autocmd Bufwritepre,filewritepre *.yap exe "1," . 6 . "g/Last Modified :.*/s/Last Modified :.*/Last Modified : " .strftime("%c")
autocmd bufwritepost,filewritepost *.yap execute "normal `a"
autocmd BufNewFile,BufRead *.yap set smartindent syntax=prolog
"autocmd BufNewFile,BufRead *.yap colo slate
"}}}

"{{{Templates indentation and syntax for java
autocmd BufNewFile,BufRead *.java set smartindent cinwords cinwords=if,else,for,do,while,switch,class,try,finally 
autocmd BufNewFile *.java so /home/master/.vim/java_template
autocmd BufNewFile *.java set smartindent 
autocmd BufNewFile *.java exe "1," . 6 . "g/File Name :.*/s//File Name : " .expand("%")
autocmd BufNewFile *.java exe "1," . 6 . "g/Creation Date :.*/s//Creation Date : " .strftime("%d-%m-%Y")
autocmd Bufwritepre,filewritepre *.java execute "normal ma"
autocmd Bufwritepre,filewritepre *.java exe "1," . 6 . "g/Last Modified :.*/s/Last Modified :.*/Last Modified : " .strftime("%c")
autocmd bufwritepost,filewritepost *.java execute "normal `a"
"}}}

"{{{Templates indentation and syntax for python
autocmd BufNewFile,BufRead *.py set foldmethod=indent smartindent cinwords=if,elif,else,for,while,try,except,finally,def,class sw=4 ts=4 expandtab
autocmd BufNewFile *.py so /home/master/.vim/python_template
autocmd BufNewFile *.py set smartindent 
autocmd BufNewFile *.py exe "1," . 10 . "g/File Name :.*/s//File Name : " .expand("%")
autocmd BufNewFile *.py exe "1," . 10 . "g/Creation Date :.*/s//Creation Date : " .strftime("%d-%m-%Y")
autocmd Bufwritepre,filewritepre *.py execute "normal ma"
autocmd Bufwritepre,filewritepre *.py exe "1," . 10 . "g/Last Modified :.*/s/Last Modified :.*/Last Modified : " .strftime("%c")
autocmd bufwritepost,filewritepost *.py execute "normal `a"
"}}}
"
"{{{Templates for pazcal
autocmd BufNewFile *.pzc,*pzh so /home/master/.vim/pazcal_template
autocmd BufNewFile *.pzc,*pzh  exe "1, 6  g/File Name :.*/s//File Name : " .expand("%")
autocmd BufNewFile *.pzc,*pzh  exe "1, 6  g/Creation Date :.*/s//Creation Date : " .strftime("%d-%m-%Y")
autocmd BufNewFile *.pzc,*pzh  exe "9, 11 g/pazcalprog/s/pazcalprog/" . expand("%:r") . "/"
autocmd BufNewFile *.pzc,*pzh  exe "9, 11 g/PROGRAM/s/PROGRAM [0-9-_]*/PROGRAM /"
autocmd Bufwritepre,filewritepre *.pzc,*pzh  execute "normal ma"
autocmd Bufwritepre,filewritepre *.pzc,*pzh  exe "1," . 6 . "g/Last Modified :.*/s/Last Modified :.*/Last Modified : " .strftime("%c")
autocmd bufwritepost,filewritepost *.pzc,*pzh  execute "normal `a"
"}}}

"{{{ Texing
"autocmd BufNewFile,BufRead *.tex set keymap=greek
autocmd BufNewFile,BufRead *.tex set smartindent tw=78
"autocmd BufNewFile,BufRead *.tex setlocal spell! spelllang=el,en<CR>
autocmd BufNewFile,BufRead *.tex set spellsuggest=best,3

"}}}

"{{{ Makefiles
autocmd BufNewFile Makefile,makefile so /home/master/.vim/makefile_template
autocmd BufNewFile,BufRead Makefile,makefile set ts=8 sw=8 noet nosi noai
"}}}

"{{{ llama
autocmd BufRead *.lla set syntax=llama
"}}}
"
"{{{ llama
autocmd BufRead *.bob set syntax=c
"}}}
"
"{{{ mutt
au BufRead /tmp/mutt-* set tw=72
"}}}

endif " has("autocmd")
