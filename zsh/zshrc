# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="master"
#ZSH_THEME="juanghurtado"

# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"

# Comment this out to disable weekly auto-update checks
# DISABLE_AUTO_UPDATE="true"

# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want red dots to be displayed while waiting for completion
# COMPLETION_WAITING_DOTS="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(git)

source $ZSH/oh-my-zsh.sh

# Customize to your needs...
export PATH=/home/master/bin:/usr/local/bin:/usr/bin:/bin:/opt/bin:/usr/i686-pc-linux-gnu/gcc-bin/4.5.3:/usr/games/bin

case "${TERM}" in
    dump)
        PROMPT='%n@%m:%~%% '
        ;;
    linux)
        echo -en "\e]P01e2320" # zenburn black (normal black)
        echo -en "\e]P8709080" # bright-black  (darkgrey)
        echo -en "\e]P1705050" # red           (darkred)
        echo -en "\e]P9dca3a3" # bright-red    (red)
        echo -en "\e]P260b48a" # green         (darkgreen)
        echo -en "\e]PAc3bf9f" # bright-green  (green)
        echo -en "\e]P3dfaf8f" # yellow        (brown)
        echo -en "\e]PBf0dfaf" # bright-yellow (yellow)
        echo -en "\e]P4506070" # blue          (darkblue)
        echo -en "\e]PC94bff3" # bright-blue   (blue)
        echo -en "\e]P5dc8cc3" # purple        (darkmagenta)
        echo -en "\e]PDec93d3" # bright-purple (magenta)
        echo -en "\e]P68cd0d3" # cyan          (darkcyan)
        echo -en "\e]PE93e0e3" # bright-cyan   (cyan)
        echo -en "\e]P7dcdccc" # white         (lightgrey)
        echo -en "\e]PFffffff" # bright-white  (white)
        ;;
esac


# {{{ Manual pages
#     - colorize, since man-db fails to do so
export LESS_TERMCAP_mb=$'\E[01;31m'   # begin blinking
export LESS_TERMCAP_md=$'\E[01;31m'   # begin bold
export LESS_TERMCAP_me=$'\E[0m'       # end mode
export LESS_TERMCAP_se=$'\E[0m'       # end standout-mode
export LESS_TERMCAP_so=$'\E[1;33;40m' # begin standout-mode - info box
export LESS_TERMCAP_ue=$'\E[0m'       # end underline
export LESS_TERMCAP_us=$'\E[1;32m'    # begin underline
# }}}
                                                                                                                                                                                                           

bindkey -v
# /etc/inputrc initialization file for readline
bindkey "\e[1~" beginning-of-line
bindkey "\e[4~" end-of-line
bindkey "\e[5~" history-search-backward
bindkey "\e[6~" history-search-forward
bindkey "\e[3~" delete-char
bindkey "\e[2~" quoted-insert
bindkey "\e[5C" forward-word
bindkey "\e[5D" backward-word
bindkey "\e\e[C" forward-word
bindkey "\e\e[D" backward-word
bindkey "\e[1;5C" forward-word
bindkey "\e[1;5D" backward-word
bindkey "\eOc" forward-word
bindkey "\eOd" backward-word
bindkey "\e[1;3C" forward-word
bindkey "\e[1;3D" backward-word
bindkey "\e[8~" end-of-line
bindkey "\eOH" beginning-of-line
bindkey "\eOF" end-of-line
bindkey "\e[H" beginning-of-line
bindkey "\e[F" end-of-line
bindkey "\e[7~" beginning-of-line
bindkey "\e[8~" end-of-line

alias ls='ls --color=auto'
alias l='ls --color=auto'
alias la='ls -A'
alias ll='ls -alFh'
alias rl='rlwrap -Acr'
alias files="ls -R | grep ':$' | sed -e 's/:$//' -e 's/[^-][^\/]*\//--/g' -e 's/^/   /' -e 's/-/|/' "
[[ -x =time ]] && alias time='command time'
alias ping='ping -c 4'
alias grep='grep --color=auto'
alias x='exit'
alias c='clear'
alias s='source ~/.zshrc'
alias gpl='git pull'
alias gch='git checkout'
alias gp='git push'
alias gm='git merge'
alias gf='git fetch'
alias gst='git status'
alias es='sudo eix-sync'
alias ef='eix'
alias ep='sudo emerge --quiet-build y portage'
alias e='sudo emerge -av --quiet-build y'
alias eu='sudo emerge -avuND --quiet-build y world'

function extract () {
if [[ -f "$1" ]]; then
    case "$1" in
        *.tbz2 | *.tar.bz2) tar -xvjf  "$1"     ;;
        *.txz | *.tar.xz)   tar -xvJf  "$1"     ;;
        *.tgz | *.tar.gz)   tar -xvzf  "$1"     ;;
        *.tar | *.cbt)      tar -xvf   "$1"     ;;
        *.zip | *.cbz)      unzip      "$1"     ;;
        *.rar | *.cbr)      unrar x    "$1"     ;;
        *.arj)              unarj x    "$1"     ;;
        *.ace)              unace x    "$1"     ;;
        *.bz2)              bunzip2    "$1"     ;;
        *.xz)               unxz       "$1"     ;;
        *.gz)               gunzip     "$1"     ;;
        *.7z)               7z x       "$1"     ;;
        *.Z)                uncompress "$1"     ;;
        *.gpg)       gpg2 -d "$1" | tar -xvzf - ;;
        *) echo "Error: failed to extract $1" ;;
    esac
else
  echo "Error: $1 is not a valid file for extraction"
fi
}

function open () {
if [[ -f "$1" ]]; then
    case "$1" in
        *.png)              gpicview     "$1" &   ;;
        *.jpeg)             gpicview     "$1" &   ;;
        *.JPG)              gpicview     "$1" &   ;;
        *.jpg)              gpicview     "$1" &   ;;
        *.pdf)              zathura     "$1" &> /dev/null &   ;;
        *.odt | *.doc)      libreoffice "$1" &> /dev/null &   ;;
        *)                  vim "$1"            ;;
    esac
else
  echo "Error: $1 is not a valid file for extraction"
fi
}

function play () {
if [[ -f "$1" ]]; then
    case "$1" in
        *.mp3 | *.ogg)          mplayer "$1"   ;;
        *.pls | *.m3u)          mplayer -playlist "$1"   ;;
        *) echo "Error: failed to open $1" ;;
    esac
else
  echo "Error: $1 is not a valid file for extraction"
fi
}

setopt correct
setopt hist_ignore_all_dups
setopt nohup
setopt NO_cdable_vars

echo -en '\033[0;33m'
figlet "Gentoo"
echo -en '\033[0m'

